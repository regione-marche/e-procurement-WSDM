package it.kdm.docer.webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2021-07-15T14:46:50.416+02:00
 * Generated source version: 2.7.10
 * 
 */
@WebService(targetNamespace = "http://webservices.docer.kdm.it", name = "DocerServicesPortType")
@XmlSeeAlso({it.kdm.docer.sdk.classes.xsd.ObjectFactory.class, ObjectFactory.class, it.kdm.docer.sdk.exceptions.xsd.ObjectFactory.class})
public interface DocerServicesPortType {

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:protocollaDocumento", output = "urn:protocollaDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:protocollaDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "protocollaDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ProtocollaDocumento")
    @WebMethod(action = "urn:protocollaDocumento")
    @ResponseWrapper(localName = "protocollaDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ProtocollaDocumentoResponse")
    public java.lang.Boolean protocollaDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:setGroupsOfUser", output = "urn:setGroupsOfUserResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:setGroupsOfUserDocerServicesDocerException")})
    @RequestWrapper(localName = "setGroupsOfUser", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetGroupsOfUser")
    @WebMethod(action = "urn:setGroupsOfUser")
    @ResponseWrapper(localName = "setGroupsOfUserResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetGroupsOfUserResponse")
    public java.lang.Boolean setGroupsOfUser(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId,
        @WebParam(name = "groups", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> groups
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateUsersOfGroup", output = "urn:updateUsersOfGroupResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateUsersOfGroupDocerServicesDocerException")})
    @RequestWrapper(localName = "updateUsersOfGroup", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateUsersOfGroup")
    @WebMethod(action = "urn:updateUsersOfGroup")
    @ResponseWrapper(localName = "updateUsersOfGroupResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateUsersOfGroupResponse")
    public java.lang.Boolean updateUsersOfGroup(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "groupId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String groupId,
        @WebParam(name = "usersToAdd", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> usersToAdd,
        @WebParam(name = "usersToRemove", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> usersToRemove
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getTitolario", output = "urn:getTitolarioResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getTitolarioDocerServicesDocerException")})
    @RequestWrapper(localName = "getTitolario", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetTitolario")
    @WebMethod(action = "urn:getTitolario")
    @ResponseWrapper(localName = "getTitolarioResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetTitolarioResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getTitolario(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "titolarioId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchUsers", output = "urn:searchUsersResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchUsersDocerServicesDocerException")})
    @RequestWrapper(localName = "searchUsers", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchUsers")
    @WebMethod(action = "urn:searchUsers")
    @ResponseWrapper(localName = "searchUsersResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchUsersResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchUsers(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "searchCriteria", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> searchCriteria
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:verifyTicket", output = "urn:verifyTicketResponse")
    @RequestWrapper(localName = "verifyTicket", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.VerifyTicket")
    @WebMethod(action = "urn:verifyTicket")
    @ResponseWrapper(localName = "verifyTicketResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.VerifyTicketResponse")
    public java.lang.Boolean verifyTicket(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token
    );

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getVersionEstesa", output = "urn:getVersionEstesaResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getVersionEstesaDocerServicesDocerException")})
    @RequestWrapper(localName = "getVersionEstesa", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetVersionEstesa")
    @WebMethod(action = "urn:getVersionEstesa")
    @ResponseWrapper(localName = "getVersionEstesaResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetVersionEstesaResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.Version> getVersionEstesa(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchAnagrafiche", output = "urn:searchAnagraficheResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchAnagraficheDocerServicesDocerException")})
    @RequestWrapper(localName = "searchAnagrafiche", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchAnagrafiche")
    @WebMethod(action = "urn:searchAnagrafiche")
    @ResponseWrapper(localName = "searchAnagraficheResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchAnagraficheResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchAnagrafiche(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "type", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String type,
        @WebParam(name = "searchCriteria", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> searchCriteria
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:registraDocumento", output = "urn:registraDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:registraDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "registraDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RegistraDocumento")
    @WebMethod(action = "urn:registraDocumento")
    @ResponseWrapper(localName = "registraDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RegistraDocumentoResponse")
    public java.lang.Boolean registraDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:replaceLastVersion", output = "urn:replaceLastVersionResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:replaceLastVersionDocerServicesDocerException")})
    @RequestWrapper(localName = "replaceLastVersion", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ReplaceLastVersion")
    @WebMethod(action = "urn:replaceLastVersion")
    @ResponseWrapper(localName = "replaceLastVersionResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ReplaceLastVersionResponse")
    public java.lang.Boolean replaceLastVersion(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "file", targetNamespace = "http://webservices.docer.kdm.it")
        byte[] file
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createGroup", output = "urn:createGroupResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createGroupDocerServicesDocerException")})
    @RequestWrapper(localName = "createGroup", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateGroup")
    @WebMethod(action = "urn:createGroup")
    @ResponseWrapper(localName = "createGroupResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateGroupResponse")
    public java.lang.Boolean createGroup(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "groupInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> groupInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchGroups", output = "urn:searchGroupsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchGroupsDocerServicesDocerException")})
    @RequestWrapper(localName = "searchGroups", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchGroups")
    @WebMethod(action = "urn:searchGroups")
    @ResponseWrapper(localName = "searchGroupsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchGroupsResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchGroups(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "searchCriteria", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> searchCriteria
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:setACLTitolario", output = "urn:setACLTitolarioResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:setACLTitolarioDocerServicesDocerException")})
    @RequestWrapper(localName = "setACLTitolario", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLTitolario")
    @WebMethod(action = "urn:setACLTitolario")
    @ResponseWrapper(localName = "setACLTitolarioResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLTitolarioResponse")
    public java.lang.Boolean setACLTitolario(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "titolarioId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioId,
        @WebParam(name = "acls", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> acls
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:removeRiferimentiDocuments", output = "urn:removeRiferimentiDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:removeRiferimentiDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "removeRiferimentiDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RemoveRiferimentiDocuments")
    @WebMethod(action = "urn:removeRiferimentiDocuments")
    @ResponseWrapper(localName = "removeRiferimentiDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RemoveRiferimentiDocumentsResponse")
    public java.lang.Boolean removeRiferimentiDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "riferimenti", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> riferimenti
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createEnte", output = "urn:createEnteResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createEnteDocerServicesDocerException")})
    @RequestWrapper(localName = "createEnte", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateEnte")
    @WebMethod(action = "urn:createEnte")
    @ResponseWrapper(localName = "createEnteResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateEnteResponse")
    public java.lang.Boolean createEnte(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "enteInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> enteInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getACLDocument", output = "urn:getACLDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getACLDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "getACLDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLDocument")
    @WebMethod(action = "urn:getACLDocument")
    @ResponseWrapper(localName = "getACLDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLDocumentResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getACLDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:classificaDocumento", output = "urn:classificaDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:classificaDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "classificaDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ClassificaDocumento")
    @WebMethod(action = "urn:classificaDocumento")
    @ResponseWrapper(localName = "classificaDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ClassificaDocumentoResponse")
    public java.lang.Boolean classificaDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:setUsersOfGroup", output = "urn:setUsersOfGroupResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:setUsersOfGroupDocerServicesDocerException")})
    @RequestWrapper(localName = "setUsersOfGroup", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetUsersOfGroup")
    @WebMethod(action = "urn:setUsersOfGroup")
    @ResponseWrapper(localName = "setUsersOfGroupResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetUsersOfGroupResponse")
    public java.lang.Boolean setUsersOfGroup(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "groupId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String groupId,
        @WebParam(name = "users", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> users
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:deleteFolder", output = "urn:deleteFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:deleteFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "deleteFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DeleteFolder")
    @WebMethod(action = "urn:deleteFolder")
    @ResponseWrapper(localName = "deleteFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DeleteFolderResponse")
    public java.lang.Boolean deleteFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateGroup", output = "urn:updateGroupResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateGroupDocerServicesDocerException")})
    @RequestWrapper(localName = "updateGroup", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateGroup")
    @WebMethod(action = "urn:updateGroup")
    @ResponseWrapper(localName = "updateGroupResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateGroupResponse")
    public java.lang.Boolean updateGroup(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "groupId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String groupId,
        @WebParam(name = "groupInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> groupInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:deleteDocument", output = "urn:deleteDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:deleteDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "deleteDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DeleteDocument")
    @WebMethod(action = "urn:deleteDocument")
    @ResponseWrapper(localName = "deleteDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DeleteDocumentResponse")
    public java.lang.Boolean deleteDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getUserRightsAnagrafiche", output = "urn:getUserRightsAnagraficheResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getUserRightsAnagraficheDocerServicesDocerException")})
    @RequestWrapper(localName = "getUserRightsAnagrafiche", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserRightsAnagrafiche")
    @WebMethod(action = "urn:getUserRightsAnagrafiche")
    @ResponseWrapper(localName = "getUserRightsAnagraficheResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserRightsAnagraficheResponse")
    public java.lang.Integer getUserRightsAnagrafiche(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "type", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String type,
        @WebParam(name = "id", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> id,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:readConfig", output = "urn:readConfigResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:readConfigDocerServicesDocerException")})
    @RequestWrapper(localName = "readConfig", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ReadConfig")
    @WebMethod(action = "urn:readConfig")
    @ResponseWrapper(localName = "readConfigResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ReadConfigResponse")
    public java.lang.String readConfig(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateTitolario", output = "urn:updateTitolarioResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateTitolarioDocerServicesDocerException")})
    @RequestWrapper(localName = "updateTitolario", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateTitolario")
    @WebMethod(action = "urn:updateTitolario")
    @ResponseWrapper(localName = "updateTitolarioResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateTitolarioResponse")
    public java.lang.Boolean updateTitolario(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "titolarioId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioId,
        @WebParam(name = "titolarioInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateFascicolo", output = "urn:updateFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "updateFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateFascicolo")
    @WebMethod(action = "urn:updateFascicolo")
    @ResponseWrapper(localName = "updateFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateFascicoloResponse")
    public java.lang.Boolean updateFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloId,
        @WebParam(name = "fascicoloInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:lockDocument", output = "urn:lockDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:lockDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "lockDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.LockDocument")
    @WebMethod(action = "urn:lockDocument")
    @ResponseWrapper(localName = "lockDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.LockDocumentResponse")
    public java.lang.Boolean lockDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:downloadDocument", output = "urn:downloadDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:downloadDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "downloadDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DownloadDocument")
    @WebMethod(action = "urn:downloadDocument")
    @ResponseWrapper(localName = "downloadDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DownloadDocumentResponse")
    public it.kdm.docer.sdk.classes.xsd.StreamDescriptor downloadDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchFolders", output = "urn:searchFoldersResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchFoldersDocerServicesDocerException")})
    @RequestWrapper(localName = "searchFolders", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchFolders")
    @WebMethod(action = "urn:searchFolders")
    @ResponseWrapper(localName = "searchFoldersResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchFoldersResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchFolders(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "searchCriteria", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> searchCriteria,
        @WebParam(name = "maxRows", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.Integer maxRows,
        @WebParam(name = "orderby", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> orderby
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:addNewVersion", output = "urn:addNewVersionResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:addNewVersionDocerServicesDocerException")})
    @RequestWrapper(localName = "addNewVersion", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddNewVersion")
    @WebMethod(action = "urn:addNewVersion")
    @ResponseWrapper(localName = "addNewVersionResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddNewVersionResponse")
    public java.lang.String addNewVersion(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "file", targetNamespace = "http://webservices.docer.kdm.it")
        byte[] file
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:loginSSO", output = "urn:loginSSOResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:loginSSODocerServicesDocerException")})
    @RequestWrapper(localName = "loginSSO", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.LoginSSO")
    @WebMethod(action = "urn:loginSSO")
    @ResponseWrapper(localName = "loginSSOResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.LoginSSOResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> loginSSO(
        @WebParam(name = "saml", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String saml,
        @WebParam(name = "codiceEnte", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String codiceEnte
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getDocumentTypesByAOO", output = "urn:getDocumentTypesByAOOResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getDocumentTypesByAOODocerServicesDocerException")})
    @RequestWrapper(localName = "getDocumentTypesByAOO", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetDocumentTypesByAOO")
    @WebMethod(action = "urn:getDocumentTypesByAOO")
    @ResponseWrapper(localName = "getDocumentTypesByAOOResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetDocumentTypesByAOOResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getDocumentTypesByAOO(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "codiceEnte", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String codiceEnte,
        @WebParam(name = "codiceAOO", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String codiceAOO
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getUserRights", output = "urn:getUserRightsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getUserRightsDocerServicesDocerException")})
    @RequestWrapper(localName = "getUserRights", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserRights")
    @WebMethod(action = "urn:getUserRights")
    @ResponseWrapper(localName = "getUserRightsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserRightsResponse")
    public java.lang.Integer getUserRights(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:addOldAdvancedVersion", output = "urn:addOldAdvancedVersionResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:addOldAdvancedVersionDocerServicesDocerException")})
    @RequestWrapper(localName = "addOldAdvancedVersion", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddOldAdvancedVersion")
    @WebMethod(action = "urn:addOldAdvancedVersion")
    @ResponseWrapper(localName = "addOldAdvancedVersionResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddOldAdvancedVersionResponse")
    public java.lang.Boolean addOldAdvancedVersion(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docIdLastVersion", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docIdLastVersion,
        @WebParam(name = "docIdNewVersion", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docIdNewVersion,
        @WebParam(name = "version", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.Double version
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:downloadVersion", output = "urn:downloadVersionResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:downloadVersionDocerServicesDocerException")})
    @RequestWrapper(localName = "downloadVersion", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DownloadVersion")
    @WebMethod(action = "urn:downloadVersion")
    @ResponseWrapper(localName = "downloadVersionResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.DownloadVersionResponse")
    public it.kdm.docer.sdk.classes.xsd.StreamDescriptor downloadVersion(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "versionNumber", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String versionNumber
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:login", output = "urn:loginResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:loginDocerServicesDocerException")})
    @RequestWrapper(localName = "login", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.Login")
    @WebMethod(action = "urn:login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.LoginResponse")
    public java.lang.String login(
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId,
        @WebParam(name = "password", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String password,
        @WebParam(name = "codiceEnte", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String codiceEnte
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:writeConfig", output = "urn:writeConfigResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:writeConfigDocerServicesDocerException")})
    @RequestWrapper(localName = "writeConfig", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.WriteConfig")
    @WebMethod(action = "urn:writeConfig")
    @ResponseWrapper(localName = "writeConfigResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.WriteConfigResponse")
    public java.lang.Boolean writeConfig(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "xmlConfig", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String xmlConfig
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:setACLFascicolo", output = "urn:setACLFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:setACLFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "setACLFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLFascicolo")
    @WebMethod(action = "urn:setACLFascicolo")
    @ResponseWrapper(localName = "setACLFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLFascicoloResponse")
    public java.lang.Boolean setACLFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloId,
        @WebParam(name = "acls", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> acls
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:addRelated", output = "urn:addRelatedResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:addRelatedDocerServicesDocerException")})
    @RequestWrapper(localName = "addRelated", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddRelated")
    @WebMethod(action = "urn:addRelated")
    @ResponseWrapper(localName = "addRelatedResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddRelatedResponse")
    public java.lang.Boolean addRelated(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "related", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> related
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getDocumentTypes", output = "urn:getDocumentTypesResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getDocumentTypesDocerServicesDocerException")})
    @RequestWrapper(localName = "getDocumentTypes", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetDocumentTypes")
    @WebMethod(action = "urn:getDocumentTypes")
    @ResponseWrapper(localName = "getDocumentTypesResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetDocumentTypesResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getDocumentTypes(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getRiferimentiDocuments", output = "urn:getRiferimentiDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getRiferimentiDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "getRiferimentiDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetRiferimentiDocuments")
    @WebMethod(action = "urn:getRiferimentiDocuments")
    @ResponseWrapper(localName = "getRiferimentiDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetRiferimentiDocumentsResponse")
    public java.util.List<java.lang.String> getRiferimentiDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:setACLFolder", output = "urn:setACLFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:setACLFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "setACLFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLFolder")
    @WebMethod(action = "urn:setACLFolder")
    @ResponseWrapper(localName = "setACLFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLFolderResponse")
    public java.lang.Boolean setACLFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId,
        @WebParam(name = "acls", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> acls
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateUser", output = "urn:updateUserResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateUserDocerServicesDocerException")})
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateUser")
    @WebMethod(action = "urn:updateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateUserResponse")
    public java.lang.Boolean updateUser(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId,
        @WebParam(name = "userInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> userInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:addRiferimentiDocuments", output = "urn:addRiferimentiDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:addRiferimentiDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "addRiferimentiDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddRiferimentiDocuments")
    @WebMethod(action = "urn:addRiferimentiDocuments")
    @ResponseWrapper(localName = "addRiferimentiDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddRiferimentiDocumentsResponse")
    public java.lang.Boolean addRiferimentiDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "riferimenti", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> riferimenti
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createDocument", output = "urn:createDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "createDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateDocument")
    @WebMethod(action = "urn:createDocument")
    @ResponseWrapper(localName = "createDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateDocumentResponse")
    public java.lang.String createDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata,
        @WebParam(name = "file", targetNamespace = "http://webservices.docer.kdm.it")
        byte[] file
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateGroupsOfUser", output = "urn:updateGroupsOfUserResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateGroupsOfUserDocerServicesDocerException")})
    @RequestWrapper(localName = "updateGroupsOfUser", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateGroupsOfUser")
    @WebMethod(action = "urn:updateGroupsOfUser")
    @ResponseWrapper(localName = "updateGroupsOfUserResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateGroupsOfUserResponse")
    public java.lang.Boolean updateGroupsOfUser(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId,
        @WebParam(name = "groupsToAdd", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> groupsToAdd,
        @WebParam(name = "groupsToRemove", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> groupsToRemove
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:changeACLTitolario", output = "urn:changeACLTitolarioResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:changeACLTitolarioDocerServicesDocerException")})
    @RequestWrapper(localName = "changeACLTitolario", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLTitolario")
    @WebMethod(action = "urn:changeACLTitolario")
    @ResponseWrapper(localName = "changeACLTitolarioResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLTitolarioResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> changeACLTitolario(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "titolarioId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioId,
        @WebParam(name = "aclToAdd", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aclToAdd,
        @WebParam(name = "aclToRemove", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> aclToRemove
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getRelatedDocuments", output = "urn:getRelatedDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getRelatedDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "getRelatedDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetRelatedDocuments")
    @WebMethod(action = "urn:getRelatedDocuments")
    @ResponseWrapper(localName = "getRelatedDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetRelatedDocumentsResponse")
    public java.util.List<java.lang.String> getRelatedDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getAnagraficaCustom", output = "urn:getAnagraficaCustomResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getAnagraficaCustomDocerServicesDocerException")})
    @RequestWrapper(localName = "getAnagraficaCustom", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetAnagraficaCustom")
    @WebMethod(action = "urn:getAnagraficaCustom")
    @ResponseWrapper(localName = "getAnagraficaCustomResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetAnagraficaCustomResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getAnagraficaCustom(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "customId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> customId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getProfileDocument", output = "urn:getProfileDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getProfileDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "getProfileDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetProfileDocument")
    @WebMethod(action = "urn:getProfileDocument")
    @ResponseWrapper(localName = "getProfileDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetProfileDocumentResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getProfileDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getGroup", output = "urn:getGroupResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getGroupDocerServicesDocerException")})
    @RequestWrapper(localName = "getGroup", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetGroup")
    @WebMethod(action = "urn:getGroup")
    @ResponseWrapper(localName = "getGroupResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetGroupResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getGroup(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "groupId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String groupId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getAOO", output = "urn:getAOOResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getAOODocerServicesDocerException")})
    @RequestWrapper(localName = "getAOO", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetAOO")
    @WebMethod(action = "urn:getAOO")
    @ResponseWrapper(localName = "getAOOResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetAOOResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getAOO(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "aooId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aooId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:removeRelated", output = "urn:removeRelatedResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:removeRelatedDocerServicesDocerException")})
    @RequestWrapper(localName = "removeRelated", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RemoveRelated")
    @WebMethod(action = "urn:removeRelated")
    @ResponseWrapper(localName = "removeRelatedResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RemoveRelatedResponse")
    public java.lang.Boolean removeRelated(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "related", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> related
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchAnagraficheEstesa", output = "urn:searchAnagraficheEstesaResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchAnagraficheEstesaDocerServicesDocerException")})
    @RequestWrapper(localName = "searchAnagraficheEstesa", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchAnagraficheEstesa")
    @WebMethod(action = "urn:searchAnagraficheEstesa")
    @ResponseWrapper(localName = "searchAnagraficheEstesaResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchAnagraficheEstesaResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchAnagraficheEstesa(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "type", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String type,
        @WebParam(name = "searchCriteria", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> searchCriteria,
        @WebParam(name = "maxRows", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.Integer maxRows,
        @WebParam(name = "orderby", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> orderby
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:changeACLFolder", output = "urn:changeACLFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:changeACLFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "changeACLFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLFolder")
    @WebMethod(action = "urn:changeACLFolder")
    @ResponseWrapper(localName = "changeACLFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLFolderResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> changeACLFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId,
        @WebParam(name = "aclToAdd", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aclToAdd,
        @WebParam(name = "aclToRemove", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> aclToRemove
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getFascicolo", output = "urn:getFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "getFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetFascicolo")
    @WebMethod(action = "urn:getFascicolo")
    @ResponseWrapper(localName = "getFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetFascicoloResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:unlockDocument", output = "urn:unlockDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:unlockDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "unlockDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UnlockDocument")
    @WebMethod(action = "urn:unlockDocument")
    @ResponseWrapper(localName = "unlockDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UnlockDocumentResponse")
    public java.lang.Boolean unlockDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:addToFolderDocuments", output = "urn:addToFolderDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:addToFolderDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "addToFolderDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddToFolderDocuments")
    @WebMethod(action = "urn:addToFolderDocuments")
    @ResponseWrapper(localName = "addToFolderDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddToFolderDocumentsResponse")
    public java.lang.Boolean addToFolderDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId,
        @WebParam(name = "document", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> document
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getGroupsOfUser", output = "urn:getGroupsOfUserResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getGroupsOfUserDocerServicesDocerException")})
    @RequestWrapper(localName = "getGroupsOfUser", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetGroupsOfUser")
    @WebMethod(action = "urn:getGroupsOfUser")
    @ResponseWrapper(localName = "getGroupsOfUserResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetGroupsOfUserResponse")
    public java.util.List<java.lang.String> getGroupsOfUser(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:pubblicaDocumento", output = "urn:pubblicaDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:pubblicaDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "pubblicaDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.PubblicaDocumento")
    @WebMethod(action = "urn:pubblicaDocumento")
    @ResponseWrapper(localName = "pubblicaDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.PubblicaDocumentoResponse")
    public java.lang.Boolean pubblicaDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:removeFromFolderDocuments", output = "urn:removeFromFolderDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:removeFromFolderDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "removeFromFolderDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RemoveFromFolderDocuments")
    @WebMethod(action = "urn:removeFromFolderDocuments")
    @ResponseWrapper(localName = "removeFromFolderDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.RemoveFromFolderDocumentsResponse")
    public java.lang.Boolean removeFromFolderDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId,
        @WebParam(name = "document", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> document
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateProfileDocument", output = "urn:updateProfileDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateProfileDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "updateProfileDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateProfileDocument")
    @WebMethod(action = "urn:updateProfileDocument")
    @ResponseWrapper(localName = "updateProfileDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateProfileDocumentResponse")
    public java.lang.Boolean updateProfileDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createFolder", output = "urn:createFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "createFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateFolder")
    @WebMethod(action = "urn:createFolder")
    @ResponseWrapper(localName = "createFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateFolderResponse")
    public java.lang.String createFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> folderInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchDocumentiFascicolo", output = "urn:searchDocumentiFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchDocumentiFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "searchDocumentiFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchDocumentiFascicolo")
    @WebMethod(action = "urn:searchDocumentiFascicolo")
    @ResponseWrapper(localName = "searchDocumentiFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchDocumentiFascicoloResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchDocumentiFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloId,
        @WebParam(name = "maxRows", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.Integer maxRows
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getUser", output = "urn:getUserResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getUserDocerServicesDocerException")})
    @RequestWrapper(localName = "getUser", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUser")
    @WebMethod(action = "urn:getUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getUser(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:changeACLFascicolo", output = "urn:changeACLFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:changeACLFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "changeACLFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLFascicolo")
    @WebMethod(action = "urn:changeACLFascicolo")
    @ResponseWrapper(localName = "changeACLFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLFascicoloResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> changeACLFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloId,
        @WebParam(name = "aclToAdd", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aclToAdd,
        @WebParam(name = "aclToRemove", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> aclToRemove
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:changeACLDocumento", output = "urn:changeACLDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:changeACLDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "changeACLDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLDocumento")
    @WebMethod(action = "urn:changeACLDocumento")
    @ResponseWrapper(localName = "changeACLDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ChangeACLDocumentoResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> changeACLDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docnum", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docnum,
        @WebParam(name = "aclToAdd", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aclToAdd,
        @WebParam(name = "aclToRemove", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> aclToRemove
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getACLFascicolo", output = "urn:getACLFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getACLFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "getACLFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLFascicolo")
    @WebMethod(action = "urn:getACLFascicolo")
    @ResponseWrapper(localName = "getACLFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLFascicoloResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getACLFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getEnte", output = "urn:getEnteResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getEnteDocerServicesDocerException")})
    @RequestWrapper(localName = "getEnte", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetEnte")
    @WebMethod(action = "urn:getEnte")
    @ResponseWrapper(localName = "getEnteResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetEnteResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getEnte(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "codiceEnte", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String codiceEnte
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createAOO", output = "urn:createAOOResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createAOODocerServicesDocerException")})
    @RequestWrapper(localName = "createAOO", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateAOO")
    @WebMethod(action = "urn:createAOO")
    @ResponseWrapper(localName = "createAOOResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateAOOResponse")
    public java.lang.Boolean createAOO(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "aooInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aooInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateEnte", output = "urn:updateEnteResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateEnteDocerServicesDocerException")})
    @RequestWrapper(localName = "updateEnte", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateEnte")
    @WebMethod(action = "urn:updateEnte")
    @ResponseWrapper(localName = "updateEnteResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateEnteResponse")
    public java.lang.Boolean updateEnte(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "codiceEnte", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String codiceEnte,
        @WebParam(name = "enteInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> enteInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createAnagraficaCustom", output = "urn:createAnagraficaCustomResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createAnagraficaCustomDocerServicesDocerException")})
    @RequestWrapper(localName = "createAnagraficaCustom", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateAnagraficaCustom")
    @WebMethod(action = "urn:createAnagraficaCustom")
    @ResponseWrapper(localName = "createAnagraficaCustomResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateAnagraficaCustomResponse")
    public java.lang.Boolean createAnagraficaCustom(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "customInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> customInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createUser", output = "urn:createUserResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createUserDocerServicesDocerException")})
    @RequestWrapper(localName = "createUser", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateUser")
    @WebMethod(action = "urn:createUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateUserResponse")
    public java.lang.Boolean createUser(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "userInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> userInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createFascicolo", output = "urn:createFascicoloResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createFascicoloDocerServicesDocerException")})
    @RequestWrapper(localName = "createFascicolo", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateFascicolo")
    @WebMethod(action = "urn:createFascicolo")
    @ResponseWrapper(localName = "createFascicoloResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateFascicoloResponse")
    public java.lang.Boolean createFascicolo(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "fascicoloInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> fascicoloInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:addNewAdvancedVersion", output = "urn:addNewAdvancedVersionResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:addNewAdvancedVersionDocerServicesDocerException")})
    @RequestWrapper(localName = "addNewAdvancedVersion", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddNewAdvancedVersion")
    @WebMethod(action = "urn:addNewAdvancedVersion")
    @ResponseWrapper(localName = "addNewAdvancedVersionResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.AddNewAdvancedVersionResponse")
    public java.lang.Boolean addNewAdvancedVersion(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docIdLastVersion", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docIdLastVersion,
        @WebParam(name = "docIdNewVersion", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docIdNewVersion
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateAnagraficaCustom", output = "urn:updateAnagraficaCustomResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateAnagraficaCustomDocerServicesDocerException")})
    @RequestWrapper(localName = "updateAnagraficaCustom", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateAnagraficaCustom")
    @WebMethod(action = "urn:updateAnagraficaCustom")
    @ResponseWrapper(localName = "updateAnagraficaCustomResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateAnagraficaCustomResponse")
    public java.lang.Boolean updateAnagraficaCustom(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "customId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> customId,
        @WebParam(name = "customInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> customInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getFolderDocuments", output = "urn:getFolderDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getFolderDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "getFolderDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetFolderDocuments")
    @WebMethod(action = "urn:getFolderDocuments")
    @ResponseWrapper(localName = "getFolderDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetFolderDocumentsResponse")
    public java.util.List<java.lang.String> getFolderDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getHistory", output = "urn:getHistoryResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getHistoryDocerServicesDocerException")})
    @RequestWrapper(localName = "getHistory", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetHistory")
    @WebMethod(action = "urn:getHistory")
    @ResponseWrapper(localName = "getHistoryResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetHistoryResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.HistoryItem> getHistory(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateFolder", output = "urn:updateFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "updateFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateFolder")
    @WebMethod(action = "urn:updateFolder")
    @ResponseWrapper(localName = "updateFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateFolderResponse")
    public java.lang.Boolean updateFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId,
        @WebParam(name = "folderInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> folderInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:logout", output = "urn:logoutResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:logoutDocerServicesDocerException")})
    @RequestWrapper(localName = "logout", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.Logout")
    @WebMethod(action = "urn:logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.LogoutResponse")
    public java.lang.Boolean logout(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getLockStatus", output = "urn:getLockStatusResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getLockStatusDocerServicesDocerException")})
    @RequestWrapper(localName = "getLockStatus", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetLockStatus")
    @WebMethod(action = "urn:getLockStatus")
    @ResponseWrapper(localName = "getLockStatusResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetLockStatusResponse")
    public it.kdm.docer.sdk.classes.xsd.LockStatus getLockStatus(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:updateAOO", output = "urn:updateAOOResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:updateAOODocerServicesDocerException")})
    @RequestWrapper(localName = "updateAOO", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateAOO")
    @WebMethod(action = "urn:updateAOO")
    @ResponseWrapper(localName = "updateAOOResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.UpdateAOOResponse")
    public java.lang.Boolean updateAOO(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "aooId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aooId,
        @WebParam(name = "aooInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> aooInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getUsersOfGroup", output = "urn:getUsersOfGroupResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getUsersOfGroupDocerServicesDocerException")})
    @RequestWrapper(localName = "getUsersOfGroup", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUsersOfGroup")
    @WebMethod(action = "urn:getUsersOfGroup")
    @ResponseWrapper(localName = "getUsersOfGroupResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUsersOfGroupResponse")
    public java.util.List<java.lang.String> getUsersOfGroup(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "groupId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String groupId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:archiviaDocumento", output = "urn:archiviaDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:archiviaDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "archiviaDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ArchiviaDocumento")
    @WebMethod(action = "urn:archiviaDocumento")
    @ResponseWrapper(localName = "archiviaDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.ArchiviaDocumentoResponse")
    public java.lang.Boolean archiviaDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getACLTitolario", output = "urn:getACLTitolarioResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getACLTitolarioDocerServicesDocerException")})
    @RequestWrapper(localName = "getACLTitolario", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLTitolario")
    @WebMethod(action = "urn:getACLTitolario")
    @ResponseWrapper(localName = "getACLTitolarioResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLTitolarioResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getACLTitolario(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "titolarioId", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getAdvancedVersions", output = "urn:getAdvancedVersionsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getAdvancedVersionsDocerServicesDocerException")})
    @RequestWrapper(localName = "getAdvancedVersions", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetAdvancedVersions")
    @WebMethod(action = "urn:getAdvancedVersions")
    @ResponseWrapper(localName = "getAdvancedVersionsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetAdvancedVersionsResponse")
    public java.util.List<java.lang.String> getAdvancedVersions(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getVersions", output = "urn:getVersionsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getVersionsDocerServicesDocerException")})
    @RequestWrapper(localName = "getVersions", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetVersions")
    @WebMethod(action = "urn:getVersions")
    @ResponseWrapper(localName = "getVersionsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetVersionsResponse")
    public java.util.List<java.lang.String> getVersions(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:fascicolaDocumento", output = "urn:fascicolaDocumentoResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:fascicolaDocumentoDocerServicesDocerException")})
    @RequestWrapper(localName = "fascicolaDocumento", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.FascicolaDocumento")
    @WebMethod(action = "urn:fascicolaDocumento")
    @ResponseWrapper(localName = "fascicolaDocumentoResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.FascicolaDocumentoResponse")
    public java.lang.Boolean fascicolaDocumento(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "metadata", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> metadata
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:setACLDocument", output = "urn:setACLDocumentResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:setACLDocumentDocerServicesDocerException")})
    @RequestWrapper(localName = "setACLDocument", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLDocument")
    @WebMethod(action = "urn:setACLDocument")
    @ResponseWrapper(localName = "setACLDocumentResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SetACLDocumentResponse")
    public java.lang.Boolean setACLDocument(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "docId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String docId,
        @WebParam(name = "acls", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> acls
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:searchDocuments", output = "urn:searchDocumentsResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:searchDocumentsDocerServicesDocerException")})
    @RequestWrapper(localName = "searchDocuments", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchDocuments")
    @WebMethod(action = "urn:searchDocuments")
    @ResponseWrapper(localName = "searchDocumentsResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.SearchDocumentsResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.SearchItem> searchDocuments(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "searchCriteria", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> searchCriteria,
        @WebParam(name = "keywords", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<java.lang.String> keywords,
        @WebParam(name = "maxRows", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.Integer maxRows,
        @WebParam(name = "orderby", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> orderby
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:createTitolario", output = "urn:createTitolarioResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:createTitolarioDocerServicesDocerException")})
    @RequestWrapper(localName = "createTitolario", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateTitolario")
    @WebMethod(action = "urn:createTitolario")
    @ResponseWrapper(localName = "createTitolarioResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.CreateTitolarioResponse")
    public java.lang.Boolean createTitolario(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "titolarioInfo", targetNamespace = "http://webservices.docer.kdm.it")
        java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> titolarioInfo
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getACLFolder", output = "urn:getACLFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getACLFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "getACLFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLFolder")
    @WebMethod(action = "urn:getACLFolder")
    @ResponseWrapper(localName = "getACLFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetACLFolderResponse")
    public java.util.List<it.kdm.docer.sdk.classes.xsd.KeyValuePair> getACLFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId
    ) throws DocerServicesDocerException_Exception;

    @WebResult(name = "return", targetNamespace = "http://webservices.docer.kdm.it")
    @Action(input = "urn:getUserRightsFolder", output = "urn:getUserRightsFolderResponse", fault = {@FaultAction(className = DocerServicesDocerException_Exception.class, value = "urn:getUserRightsFolderDocerServicesDocerException")})
    @RequestWrapper(localName = "getUserRightsFolder", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserRightsFolder")
    @WebMethod(action = "urn:getUserRightsFolder")
    @ResponseWrapper(localName = "getUserRightsFolderResponse", targetNamespace = "http://webservices.docer.kdm.it", className = "it.kdm.docer.webservices.GetUserRightsFolderResponse")
    public java.lang.Integer getUserRightsFolder(
        @WebParam(name = "token", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "folderId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String folderId,
        @WebParam(name = "userId", targetNamespace = "http://webservices.docer.kdm.it")
        java.lang.String userId
    ) throws DocerServicesDocerException_Exception;
}
