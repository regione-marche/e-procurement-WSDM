package it.kdm.docer.core.authentication;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2021-07-15T14:46:50.652+02:00
 * Generated source version: 2.7.10
 * 
 */
@WebService(targetNamespace = "http://authentication.core.docer.kdm.it", name = "AuthenticationServicePortType")
@XmlSeeAlso({ObjectFactory.class, org.apache.commons.collections.keyvalue.xsd.ObjectFactory.class})
public interface AuthenticationServicePortType {

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:loginOnDemand", output = "urn:loginOnDemandResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:loginOnDemandAuthenticationServiceException")})
    @RequestWrapper(localName = "loginOnDemand", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.LoginOnDemand")
    @WebMethod(action = "urn:loginOnDemand")
    @ResponseWrapper(localName = "loginOnDemandResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.LoginOnDemandResponse")
    public java.lang.String loginOnDemand(
        @WebParam(name = "token", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String token,
        @WebParam(name = "serviceName", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String serviceName,
        @WebParam(name = "serviceUrl", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String serviceUrl
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:loginSSO", output = "urn:loginSSOResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:loginSSOAuthenticationServiceException")})
    @RequestWrapper(localName = "loginSSO", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.LoginSSO")
    @WebMethod(action = "urn:loginSSO")
    @ResponseWrapper(localName = "loginSSOResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.LoginSSOResponse")
    public java.lang.String loginSSO(
        @WebParam(name = "saml", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String saml,
        @WebParam(name = "codiceEnte", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String codiceEnte,
        @WebParam(name = "application", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String application
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:getRealUser", output = "urn:getRealUserResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:getRealUserAuthenticationServiceException")})
    @RequestWrapper(localName = "getRealUser", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.GetRealUser")
    @WebMethod(action = "urn:getRealUser")
    @ResponseWrapper(localName = "getRealUserResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.GetRealUserResponse")
    public java.lang.String getRealUser(
        @WebParam(name = "saml", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String saml
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:getUserInfo", output = "urn:getUserInfoResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:getUserInfoAuthenticationServiceException")})
    @RequestWrapper(localName = "getUserInfo", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.GetUserInfo")
    @WebMethod(action = "urn:getUserInfo")
    @ResponseWrapper(localName = "getUserInfoResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.GetUserInfoResponse")
    public java.util.List<org.apache.commons.collections.keyvalue.xsd.DefaultKeyValue> getUserInfo(
        @WebParam(name = "token", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String token
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:getEnteDescription", output = "urn:getEnteDescriptionResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:getEnteDescriptionAuthenticationServiceException")})
    @RequestWrapper(localName = "getEnteDescription", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.GetEnteDescription")
    @WebMethod(action = "urn:getEnteDescription")
    @ResponseWrapper(localName = "getEnteDescriptionResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.GetEnteDescriptionResponse")
    public java.lang.String getEnteDescription(
        @WebParam(name = "token", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String token
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:login", output = "urn:loginResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:loginAuthenticationServiceException")})
    @RequestWrapper(localName = "login", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.Login")
    @WebMethod(action = "urn:login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.LoginResponse")
    public java.lang.String login(
        @WebParam(name = "username", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String username,
        @WebParam(name = "password", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String password,
        @WebParam(name = "codiceEnte", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String codiceEnte,
        @WebParam(name = "application", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String application
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:verifyToken", output = "urn:verifyTokenResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:verifyTokenAuthenticationServiceException")})
    @RequestWrapper(localName = "verifyToken", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.VerifyToken")
    @WebMethod(action = "urn:verifyToken")
    @ResponseWrapper(localName = "verifyTokenResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.VerifyTokenResponse")
    public java.lang.Boolean verifyToken(
        @WebParam(name = "token", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String token
    ) throws AuthenticationServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://authentication.core.docer.kdm.it")
    @Action(input = "urn:logout", output = "urn:logoutResponse", fault = {@FaultAction(className = AuthenticationServiceException_Exception.class, value = "urn:logoutAuthenticationServiceException")})
    @RequestWrapper(localName = "logout", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.Logout")
    @WebMethod(action = "urn:logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://authentication.core.docer.kdm.it", className = "it.kdm.docer.core.authentication.LogoutResponse")
    public java.lang.Boolean logout(
        @WebParam(name = "token", targetNamespace = "http://authentication.core.docer.kdm.it")
        java.lang.String token
    ) throws AuthenticationServiceException_Exception;
}
