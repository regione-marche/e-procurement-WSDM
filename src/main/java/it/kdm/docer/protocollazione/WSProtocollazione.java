package it.kdm.docer.protocollazione;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2021-07-15T14:46:48.692+02:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "WSProtocollazione", 
                  targetNamespace = "http://protocollazione.docer.kdm.it") 
public class WSProtocollazione extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://protocollazione.docer.kdm.it", "WSProtocollazione");
    public final static QName WSProtocollazioneHttpsSoap12Endpoint = new QName("http://protocollazione.docer.kdm.it", "WSProtocollazioneHttpsSoap12Endpoint");
    public final static QName WSProtocollazioneHttpsSoap11Endpoint = new QName("http://protocollazione.docer.kdm.it", "WSProtocollazioneHttpsSoap11Endpoint");
    public final static QName WSProtocollazioneHttpsEndpoint = new QName("http://protocollazione.docer.kdm.it", "WSProtocollazioneHttpsEndpoint");
    static {
        WSDL_LOCATION = null;
    }

    public WSProtocollazione(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSProtocollazione(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSProtocollazione() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns WSProtocollazionePortType
     */
    @WebEndpoint(name = "WSProtocollazioneHttpsSoap12Endpoint")
    public WSProtocollazionePortType getWSProtocollazioneHttpsSoap12Endpoint() {
        return super.getPort(WSProtocollazioneHttpsSoap12Endpoint, WSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSProtocollazionePortType
     */
    @WebEndpoint(name = "WSProtocollazioneHttpsSoap12Endpoint")
    public WSProtocollazionePortType getWSProtocollazioneHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(WSProtocollazioneHttpsSoap12Endpoint, WSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns WSProtocollazionePortType
     */
    @WebEndpoint(name = "WSProtocollazioneHttpsSoap11Endpoint")
    public WSProtocollazionePortType getWSProtocollazioneHttpsSoap11Endpoint() {
        return super.getPort(WSProtocollazioneHttpsSoap11Endpoint, WSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSProtocollazionePortType
     */
    @WebEndpoint(name = "WSProtocollazioneHttpsSoap11Endpoint")
    public WSProtocollazionePortType getWSProtocollazioneHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(WSProtocollazioneHttpsSoap11Endpoint, WSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns WSProtocollazionePortType
     */
    @WebEndpoint(name = "WSProtocollazioneHttpsEndpoint")
    public WSProtocollazionePortType getWSProtocollazioneHttpsEndpoint() {
        return super.getPort(WSProtocollazioneHttpsEndpoint, WSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSProtocollazionePortType
     */
    @WebEndpoint(name = "WSProtocollazioneHttpsEndpoint")
    public WSProtocollazionePortType getWSProtocollazioneHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(WSProtocollazioneHttpsEndpoint, WSProtocollazionePortType.class, features);
    }

}
