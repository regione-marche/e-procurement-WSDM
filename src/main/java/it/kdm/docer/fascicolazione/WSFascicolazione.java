package it.kdm.docer.fascicolazione;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2021-07-15T14:46:49.072+02:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "WSFascicolazione", 
                  targetNamespace = "http://fascicolazione.docer.kdm.it") 
public class WSFascicolazione extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://fascicolazione.docer.kdm.it", "WSFascicolazione");
    public final static QName WSFascicolazioneHttpsEndpoint = new QName("http://fascicolazione.docer.kdm.it", "WSFascicolazioneHttpsEndpoint");
    public final static QName WSFascicolazioneHttpsSoap12Endpoint = new QName("http://fascicolazione.docer.kdm.it", "WSFascicolazioneHttpsSoap12Endpoint");
    public final static QName WSFascicolazioneHttpsSoap11Endpoint = new QName("http://fascicolazione.docer.kdm.it", "WSFascicolazioneHttpsSoap11Endpoint");
    static {
        WSDL_LOCATION = null;
    }

    public WSFascicolazione(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSFascicolazione(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSFascicolazione() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns WSFascicolazionePortType
     */
    @WebEndpoint(name = "WSFascicolazioneHttpsEndpoint")
    public WSFascicolazionePortType getWSFascicolazioneHttpsEndpoint() {
        return super.getPort(WSFascicolazioneHttpsEndpoint, WSFascicolazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSFascicolazionePortType
     */
    @WebEndpoint(name = "WSFascicolazioneHttpsEndpoint")
    public WSFascicolazionePortType getWSFascicolazioneHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(WSFascicolazioneHttpsEndpoint, WSFascicolazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns WSFascicolazionePortType
     */
    @WebEndpoint(name = "WSFascicolazioneHttpsSoap12Endpoint")
    public WSFascicolazionePortType getWSFascicolazioneHttpsSoap12Endpoint() {
        return super.getPort(WSFascicolazioneHttpsSoap12Endpoint, WSFascicolazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSFascicolazionePortType
     */
    @WebEndpoint(name = "WSFascicolazioneHttpsSoap12Endpoint")
    public WSFascicolazionePortType getWSFascicolazioneHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(WSFascicolazioneHttpsSoap12Endpoint, WSFascicolazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns WSFascicolazionePortType
     */
    @WebEndpoint(name = "WSFascicolazioneHttpsSoap11Endpoint")
    public WSFascicolazionePortType getWSFascicolazioneHttpsSoap11Endpoint() {
        return super.getPort(WSFascicolazioneHttpsSoap11Endpoint, WSFascicolazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSFascicolazionePortType
     */
    @WebEndpoint(name = "WSFascicolazioneHttpsSoap11Endpoint")
    public WSFascicolazionePortType getWSFascicolazioneHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(WSFascicolazioneHttpsSoap11Endpoint, WSFascicolazionePortType.class, features);
    }

}
