package it.dedagroup.ws.protocolla.servizi;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2018-10-01T16:37:06+02:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "Protocolla", 
                  targetNamespace = "http://servizi.protocollo.ws.dedagroup.it") 
public class Protocolla extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://servizi.protocollo.ws.dedagroup.it", "Protocolla");
    public final static QName ProtocollaHttpEndpoint = new QName("http://servizi.protocollo.ws.dedagroup.it", "ProtocollaHttpEndpoint");
    public final static QName ProtocollaHttpSoap11Endpoint = new QName("http://servizi.protocollo.ws.dedagroup.it", "ProtocollaHttpSoap11Endpoint");
    public final static QName ProtocollaHttpSoap12Endpoint = new QName("http://servizi.protocollo.ws.dedagroup.it", "ProtocollaHttpSoap12Endpoint");
    static {
        WSDL_LOCATION = null;
    }

    public Protocolla(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Protocolla(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Protocolla() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ProtocollaPortType
     */
    @WebEndpoint(name = "ProtocollaHttpEndpoint")
    public ProtocollaPortType getProtocollaHttpEndpoint() {
        return super.getPort(ProtocollaHttpEndpoint, ProtocollaPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProtocollaPortType
     */
    @WebEndpoint(name = "ProtocollaHttpEndpoint")
    public ProtocollaPortType getProtocollaHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(ProtocollaHttpEndpoint, ProtocollaPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProtocollaPortType
     */
    @WebEndpoint(name = "ProtocollaHttpSoap11Endpoint")
    public ProtocollaPortType getProtocollaHttpSoap11Endpoint() {
        return super.getPort(ProtocollaHttpSoap11Endpoint, ProtocollaPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProtocollaPortType
     */
    @WebEndpoint(name = "ProtocollaHttpSoap11Endpoint")
    public ProtocollaPortType getProtocollaHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(ProtocollaHttpSoap11Endpoint, ProtocollaPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProtocollaPortType
     */
    @WebEndpoint(name = "ProtocollaHttpSoap12Endpoint")
    public ProtocollaPortType getProtocollaHttpSoap12Endpoint() {
        return super.getPort(ProtocollaHttpSoap12Endpoint, ProtocollaPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProtocollaPortType
     */
    @WebEndpoint(name = "ProtocollaHttpSoap12Endpoint")
    public ProtocollaPortType getProtocollaHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ProtocollaHttpSoap12Endpoint, ProtocollaPortType.class, features);
    }

}
