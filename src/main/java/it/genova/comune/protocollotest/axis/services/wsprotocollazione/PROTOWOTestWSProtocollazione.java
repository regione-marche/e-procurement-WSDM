package it.genova.comune.protocollotest.axis.services.wsprotocollazione;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2016-11-18T15:14:34.891+01:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "PROTO_WO_test_WSProtocollazione", 
                  targetNamespace = "http://protocollotest.comune.genova.it/axis/services/WSProtocollazione") 
public class PROTOWOTestWSProtocollazione extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazione");
    public final static QName PROTOWOTestWSProtocollazioneHttpSoap12Endpoint = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazioneHttpSoap12Endpoint");
    public final static QName PROTOWOTestWSProtocollazioneHttpsEndpoint = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazioneHttpsEndpoint");
    public final static QName PROTOWOTestWSProtocollazioneHttpSoap11Endpoint = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazioneHttpSoap11Endpoint");
    public final static QName PROTOWOTestWSProtocollazioneHttpsSoap12Endpoint = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazioneHttpsSoap12Endpoint");
    public final static QName PROTOWOTestWSProtocollazioneHttpsSoap11Endpoint = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazioneHttpsSoap11Endpoint");
    public final static QName PROTOWOTestWSProtocollazioneHttpEndpoint = new QName("http://protocollotest.comune.genova.it/axis/services/WSProtocollazione", "PROTO_WO_test_WSProtocollazioneHttpEndpoint");
    static {
        WSDL_LOCATION = null;
    }

    public PROTOWOTestWSProtocollazione(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PROTOWOTestWSProtocollazione(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PROTOWOTestWSProtocollazione() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpSoap12Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpSoap12Endpoint() {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpSoap12Endpoint, PROTOWOTestWSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpSoap12Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpSoap12Endpoint, PROTOWOTestWSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpsEndpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpsEndpoint() {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpsEndpoint, PROTOWOTestWSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpsEndpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpsEndpoint, PROTOWOTestWSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpSoap11Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpSoap11Endpoint() {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpSoap11Endpoint, PROTOWOTestWSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpSoap11Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpSoap11Endpoint, PROTOWOTestWSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpsSoap12Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpsSoap12Endpoint() {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpsSoap12Endpoint, PROTOWOTestWSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpsSoap12Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpsSoap12Endpoint, PROTOWOTestWSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpsSoap11Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpsSoap11Endpoint() {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpsSoap11Endpoint, PROTOWOTestWSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpsSoap11Endpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpsSoap11Endpoint, PROTOWOTestWSProtocollazionePortType.class, features);
    }
    /**
     *
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpEndpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpEndpoint() {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpEndpoint, PROTOWOTestWSProtocollazionePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PROTOWOTestWSProtocollazionePortType
     */
    @WebEndpoint(name = "PROTO_WO_test_WSProtocollazioneHttpEndpoint")
    public PROTOWOTestWSProtocollazionePortType getPROTOWOTestWSProtocollazioneHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(PROTOWOTestWSProtocollazioneHttpEndpoint, PROTOWOTestWSProtocollazionePortType.class, features);
    }

}
