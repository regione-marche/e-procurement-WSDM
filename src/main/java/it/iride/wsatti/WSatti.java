package it.iride.wsatti;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2015-02-06T15:37:00.459+01:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "WSatti", 
                  targetNamespace = "http://tempuri.org/") 
public class WSatti extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "WSatti");
    public final static QName WSattiHttpGet = new QName("http://tempuri.org/", "WSattiHttpGet");
    public final static QName WSattiSoap = new QName("http://tempuri.org/", "WSattiSoap");
    public final static QName WSattiSoap12 = new QName("http://tempuri.org/", "WSattiSoap12");
    public final static QName WSattiHttpPost = new QName("http://tempuri.org/", "WSattiHttpPost");
    static {
        WSDL_LOCATION = null;
    }

    public WSatti(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSatti(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSatti() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns WSattiHttpGet
     */
    @WebEndpoint(name = "WSattiHttpGet")
    public WSattiHttpGet getWSattiHttpGet() {
        return super.getPort(WSattiHttpGet, WSattiHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSattiHttpGet
     */
    @WebEndpoint(name = "WSattiHttpGet")
    public WSattiHttpGet getWSattiHttpGet(WebServiceFeature... features) {
        return super.getPort(WSattiHttpGet, WSattiHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns WSattiSoap
     */
    @WebEndpoint(name = "WSattiSoap")
    public WSattiSoap getWSattiSoap() {
        return super.getPort(WSattiSoap, WSattiSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSattiSoap
     */
    @WebEndpoint(name = "WSattiSoap")
    public WSattiSoap getWSattiSoap(WebServiceFeature... features) {
        return super.getPort(WSattiSoap, WSattiSoap.class, features);
    }
    /**
     *
     * @return
     *     returns WSattiSoap
     */
    @WebEndpoint(name = "WSattiSoap12")
    public WSattiSoap getWSattiSoap12() {
        return super.getPort(WSattiSoap12, WSattiSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSattiSoap
     */
    @WebEndpoint(name = "WSattiSoap12")
    public WSattiSoap getWSattiSoap12(WebServiceFeature... features) {
        return super.getPort(WSattiSoap12, WSattiSoap.class, features);
    }
    /**
     *
     * @return
     *     returns WSattiHttpPost
     */
    @WebEndpoint(name = "WSattiHttpPost")
    public WSattiHttpPost getWSattiHttpPost() {
        return super.getPort(WSattiHttpPost, WSattiHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSattiHttpPost
     */
    @WebEndpoint(name = "WSattiHttpPost")
    public WSattiHttpPost getWSattiHttpPost(WebServiceFeature... features) {
        return super.getPort(WSattiHttpPost, WSattiHttpPost.class, features);
    }

}
