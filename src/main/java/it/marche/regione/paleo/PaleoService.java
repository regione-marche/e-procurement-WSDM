package it.marche.regione.paleo;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2023-09-14T09:15:24.680+02:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "PaleoService", 
                  targetNamespace = "http://paleo.regione.marche.it/services/") 
public class PaleoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://paleo.regione.marche.it/services/", "PaleoService");
    public final static QName BasicHttpBindingIPaleoService1 = new QName("http://paleo.regione.marche.it/services/", "BasicHttpBinding_IPaleoService1");
    public final static QName BasicHttpBindingIPaleoService = new QName("http://paleo.regione.marche.it/services/", "BasicHttpBinding_IPaleoService");
    static {
        WSDL_LOCATION = null;
    }

    public PaleoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PaleoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PaleoService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PaleoService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PaleoService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PaleoService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns IPaleoService
     */
    @WebEndpoint(name = "BasicHttpBinding_IPaleoService1")
    public IPaleoService getBasicHttpBindingIPaleoService1() {
        return super.getPort(BasicHttpBindingIPaleoService1, IPaleoService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPaleoService
     */
    @WebEndpoint(name = "BasicHttpBinding_IPaleoService1")
    public IPaleoService getBasicHttpBindingIPaleoService1(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIPaleoService1, IPaleoService.class, features);
    }
    /**
     *
     * @return
     *     returns IPaleoService
     */
    @WebEndpoint(name = "BasicHttpBinding_IPaleoService")
    public IPaleoService getBasicHttpBindingIPaleoService() {
        return super.getPort(BasicHttpBindingIPaleoService, IPaleoService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPaleoService
     */
    @WebEndpoint(name = "BasicHttpBinding_IPaleoService")
    public IPaleoService getBasicHttpBindingIPaleoService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIPaleoService, IPaleoService.class, features);
    }

}
