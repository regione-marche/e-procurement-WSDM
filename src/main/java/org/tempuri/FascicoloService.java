package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2019-02-01T10:12:09.299+01:00
 * Generated source version: 2.7.10
 * 
 */
@WebServiceClient(name = "FascicoloService", 
                  wsdlLocation = "file:/C:/Java/Sviluppo/EclipseWS/Eldasoft64/EldasoftWSDM2/src/main/resources/wsdl/ArchiflowService93_Fascicoli.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class FascicoloService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "FascicoloService");
    public final static QName ClassificationFascicoliBaseHTTP = new QName("http://tempuri.org/", "Classification.Fascicoli.BaseHTTP");
    public final static QName ClassificationFascicoliBaseHTTPS = new QName("http://tempuri.org/", "Classification.Fascicoli.BaseHTTPS");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Java/Sviluppo/EclipseWS/Eldasoft64/EldasoftWSDM2/src/main/resources/wsdl/ArchiflowService93_Fascicoli.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FascicoloService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Java/Sviluppo/EclipseWS/Eldasoft64/EldasoftWSDM2/src/main/resources/wsdl/ArchiflowService93_Fascicoli.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FascicoloService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FascicoloService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FascicoloService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns IFascicoloServiceContract
     */
    @WebEndpoint(name = "Classification.Fascicoli.BaseHTTP")
    public IFascicoloServiceContract getClassificationFascicoliBaseHTTP() {
        return super.getPort(ClassificationFascicoliBaseHTTP, IFascicoloServiceContract.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IFascicoloServiceContract
     */
    @WebEndpoint(name = "Classification.Fascicoli.BaseHTTP")
    public IFascicoloServiceContract getClassificationFascicoliBaseHTTP(WebServiceFeature... features) {
        return super.getPort(ClassificationFascicoliBaseHTTP, IFascicoloServiceContract.class, features);
    }
    /**
     *
     * @return
     *     returns IFascicoloServiceContract
     */
    @WebEndpoint(name = "Classification.Fascicoli.BaseHTTPS")
    public IFascicoloServiceContract getClassificationFascicoliBaseHTTPS() {
        return super.getPort(ClassificationFascicoliBaseHTTPS, IFascicoloServiceContract.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IFascicoloServiceContract
     */
    @WebEndpoint(name = "Classification.Fascicoli.BaseHTTPS")
    public IFascicoloServiceContract getClassificationFascicoliBaseHTTPS(WebServiceFeature... features) {
        return super.getPort(ClassificationFascicoliBaseHTTPS, IFascicoloServiceContract.class, features);
    }

}
